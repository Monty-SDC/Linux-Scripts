#!/bin/bash
# Credit - Grok, Modified by Bryan

# Exit on error
set -e

# Ensure script is run as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (e.g., sudo ./install.sh)"
  exit 1
fi

# Log file
LOGFILE="/var/log/ollama-install.log"
exec > >(tee -a "$LOGFILE") 2>&1
echo "Starting post-install script on $(date)"

# Update system
echo "Updating system..."
apt update && apt upgrade -y

# Install NVIDIA drivers and CUDA
echo "Installing NVIDIA drivers and CUDA..."
apt install -y ubuntu-drivers-common
ubuntu-drivers autoinstall

# Optional: Install CUDA toolkit if needed
apt install -y nvidia-cuda-toolkit

# Verify NVIDIA driver
echo "Verifying NVIDIA driver..."
if ! command -v nvidia-smi &>/dev/null || ! nvidia-smi; then
  echo "ERROR: NVIDIA driver installation failed" >&2
  exit 1
fi

# Install Ollama
echo "Installing Ollama..."
curl -fsSL https://ollama.com/install.sh | sh

# Create ollama system user if not exists
if ! id "ollama" &>/dev/null; then
  echo "Creating 'ollama' user..."
  useradd --system --no-create-home --group --shell /usr/sbin/nologin ollama
fi

# Configure Ollama service
echo "Configuring Ollama service..."
OLLAMA_BIN=$(command -v ollama)
cat <<EOF > /etc/systemd/system/ollama.service
[Unit]
Description=Ollama Service
After=network-online.target

[Service]
ExecStart=$OLLAMA_BIN serve
User=ollama
Group=ollama
Restart=always
RestartSec=3
Environment="OLLAMA_HOST=0.0.0.0:11434"
Environment="OLLAMA_FLASH_ATTENTION=1"

[Install]
WantedBy=default.target
EOF

systemctl daemon-reload
systemctl enable ollama
systemctl start ollama

# Verify Ollama
echo "Verifying Ollama installation..."
if ! ollama --version; then
  echo "ERROR: Ollama installation failed" >&2
  exit 1
fi

# Pull models
echo "Pulling models..."
ollama pull llama3:8b || { echo "Failed to pull llama3:8b"; exit 1; }
ollama pull phi3 || { echo "Failed to pull phi3"; exit 1; }

# Install Open WebUI
echo "Installing Open WebUI..."
mkdir -p /opt/open-webui
chown ubuntu:ubuntu /opt/open-webui

# Install Open WebUI in a virtual environment
python3 -m venv /opt/open-webui
/opt/open-webui/bin/pip install --upgrade pip
/opt/open-webui/bin/pip install open-webui

# Create Open WebUI systemd service
echo "Creating Open WebUI systemd service..."
cat <<EOF > /etc/systemd/system/open-webui.service
[Unit]
Description=Open WebUI Service
After=network.target ollama.service

[Service]
ExecStart=/opt/open-webui/bin/open-webui serve
WorkingDirectory=/home/ubuntu
User=ubuntu
Group=ubuntu
Restart=always
Environment="PATH=/usr/local/bin:/usr/bin:/bin"

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable open-webui
systemctl start open-webui

# Configure UFW
echo "Configuring firewall..."
apt install -y ufw
ufw allow 8080/tcp
ufw allow 22/tcp
ufw --force enable

# Clean up
echo "Cleaning up..."
apt autoremove -y
apt autoclean

echo "Installation complete on $(date)"
echo "Access Open WebUI at http://<VM_IP>:8080"
